services:
  postgres:
    image: "postgres:latest"
    environment:
      POSTGRES_DB: ${POSTGRESQL_DB}
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    networks:
      - wa2-app
    ports:
      - "5432:5432"
  keycloak:
    depends_on:
      - postgres
    environment:
      DB_VENDOR: postgres
      DB_URL: jdbc:postgresql://localhost:5432/${POSTGRESQL_DB}
      DB_DATABASE: ${POSTGRESQL_DB}
      DB_USER: ${POSTGRESQL_USER}
      DB_PASSWORD: ${POSTGRESQL_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    image: quay.io/keycloak/keycloak:latest
    ports:
      - "8080:8080"
    networks:
      - wa2-app
    volumes:
      - ./imports:/opt/keycloak/data/import
    command:
      - "start-dev --import-realm"
  spring:
    depends_on:
      - postgres
      - keycloak
    environment:
      - spring.datasource.url=${SPRING_URL}
      - spring.jpa.hibernate.ddl-auto=${SPRING_DDLAUTO}
    image: ticketing-spring-api
    ports:
      - "8081:8081"
    networks:
      - wa2-app
  loki:
    image: grafana/loki
    ports:
      - "3100:3100"
    volumes:
      - ./volumes/loki:/loki
    networks:
      - wa2-app
  promtail:
    image: grafana/promtail
    volumes:
      - ./loki/promtail-config.yaml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers
    networks:
      - wa2-app
  grafana:
    image: grafana/grafana-oss
    ports:
      - "3000:3000"
    volumes:
      - ./volumes/grafana:/var/lib/grafana
      - ./loki/grafana/provisioning/:/etc/grafana/provisioning/
    networks:
      - wa2-app

networks:
  wa2-app:
